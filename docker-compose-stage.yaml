version: '3.3'

services:
  frontend-gptutor-stage-tg:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "TG"
        REACT_APP: 'GPTutor'
        REACT_APP_BACKEND_HOST: 'https://stage.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://stage.${HOST}/websocket/"
    container_name: frontend-gptutor-stage-tg
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-gptutor-stage-tg.rule=Host(`deep-gpt.stage.${HOST}`)"
      - "traefik.http.routers.frontend-gptutor-stage-tg.entrypoints=websecure"
      - "traefik.http.routers.frontend-gptutor-stage-tg.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-gptutor-stage:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "VK"
        REACT_APP: 'GPTutor'
        REACT_APP_BACKEND_HOST: 'https://stage.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://stage.${HOST}/websocket/"
    container_name: frontend-gptutor-stage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-gptutor-stage.rule=Host(`gptutor.stage.${HOST}`)"
      - "traefik.http.routers.frontend-gptutor-stage.entrypoints=websecure"
      - "traefik.http.routers.frontend-gptutor-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-stable-art-stage:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "VK"
        REACT_APP: 'Stable Art'
        REACT_APP_BACKEND_HOST: 'https://stage.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://stage.${HOST}/websocket/"
    container_name: frontend-stable-art-stage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-stable-art-stage.rule=Host(`stable-art.stage.${HOST}`)"
      - "traefik.http.routers.frontend-stable-art-stage.entrypoints=websecure"
      - "traefik.http.routers.frontend-stable-art-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-ai-humor-stage:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "VK"
        REACT_APP: 'AiHumor'
        REACT_APP_BACKEND_HOST: 'https://stage.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://stage.${HOST}/websocket/"
    container_name: frontend-ai-humor-stage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ai-humor-stage.rule=Host(`ai-humor.stage.${HOST}`)"
      - "traefik.http.routers.ai-humor-stage.entrypoints=websecure"
      - "traefik.http.routers.ai-humor-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-smart-vk-doc:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "VK"
        REACT_APP: 'SmartVkDoc'
        REACT_APP_BACKEND_HOST: 'https://stage.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://stage.${HOST}/websocket/"
    container_name: frontend-smart-vk-doc
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.smart-vk-doc-stage.rule=Host(`smart-vk-doc.stage.${HOST}`)"
      - "traefik.http.routers.smart-vk-doc-stage.entrypoints=websecure"
      - "traefik.http.routers.smart-vk-doc-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  backend-stage:
    env_file:
      - .env
      - .env-stage
    build: ./GPTutor-Backend
    container_name: backend-stage
    depends_on:
      - postgresql-stage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-stage.rule=Host(`stage.${HOST}`)"
      - "traefik.http.routers.backend-stage.entrypoints=websecure"
      - "traefik.http.routers.backend-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  rag-stage:
    env_file:
      - .env
      - .env-stage
    container_name: rag-stage
    build:
      context: ./GPTutor-Rag
    ports:
      - "5001:5000"
    networks:
      - trfk

  models-stage:
    env_file:
      - .env-stage
    container_name: models-stage
    build:
      context: GPTutor-Models
      dockerfile: Dockerfile
    networks:
      - trfk

  postgresql-stage:
    image: 'postgres:13.1-alpine'
    container_name: postgresql-stage
    env_file:
      - .env-stage
    volumes:
      - db-data-stage:/var/lib/postgresql/data
    networks:
      - trfk

volumes:
  db-data-stage:

networks:
  trfk:
    driver: bridge

