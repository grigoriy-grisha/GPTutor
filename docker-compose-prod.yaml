version: '3.9'

services:
  frontend-gptutor-prod-tg:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "TG"
        REACT_APP: 'GPTutor'
        REACT_APP_BACKEND_HOST: 'https://prod.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://prod.${HOST}/websocket/"
    container_name: frontend-gptutor-prod-tg
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-gptutor-prod-tg.rule=Host(`deep-gpt.prod.${HOST}`)"
      - "traefik.http.routers.frontend-gptutor-prod-tg.entrypoints=websecure"
      - "traefik.http.routers.frontend-gptutor-prod-tg.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-gptutor-prod:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "VK"
        REACT_APP: 'GPTutor'
        REACT_APP_BACKEND_HOST: 'https://prod.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://prod.${HOST}/websocket/"
    container_name: frontend-gptutor-prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-gptutor-prod.rule=Host(`gptutor.prod.${HOST}`)"
      - "traefik.http.routers.frontend-gptutor-prod.entrypoints=websecure"
      - "traefik.http.routers.frontend-gptutor-prod.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-stable-art-prod:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "VK"
        REACT_APP: 'Stable Art'
        REACT_APP_BACKEND_HOST: 'https://prod.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://prod.${HOST}/websocket/"
    container_name: frontend-stable-art-prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-stable-art-prod.rule=Host(`stable-art.prod.${HOST}`)"
      - "traefik.http.routers.frontend-stable-art-prod.entrypoints=websecure"
      - "traefik.http.routers.frontend-stable-art-prod.tls.certresolver=myresolver"
    networks:
      - trfk

  frontend-ai-humor-prod:
    env_file:
      - .env
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_PLATFORM: "VK"
        REACT_APP: 'AiHumor'
        REACT_APP_BACKEND_HOST: 'https://prod.${HOST}/'
        REACT_APP_BACKEND_HOST_WS: "wss://prod.${HOST}/websocket/"
    container_name: frontend-ai-humor-prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ai-humor-stage.rule=Host(`ai-humor.prod.${HOST}`)"
      - "traefik.http.routers.ai-humor-stage.entrypoints=websecure"
      - "traefik.http.routers.ai-humor-stage.tls.certresolver=myresolver"
    networks:
      - trfk

  backend-prod:
    env_file:
      - .env
      - .env-prod
    build: ./GPTutor-Backend
    container_name: backend-prod
    depends_on:
      - postgresql-prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-prod.rule=Host(`prod.${HOST}`)"
      - "traefik.http.routers.backend-prod.entrypoints=websecure"
      - "traefik.http.routers.backend-prod.tls.certresolver=myresolver"
    networks:
      - trfk

  models-prod:
    env_file:
      - .env-prod
    container_name: models-prod
    build:
      context: GPTutor-Models
      dockerfile: Dockerfile
    networks:
      - trfk

  postgresql-prod:
    image: 'postgres:13.1-alpine'
    container_name: postgresql-prod
    env_file:
      - .env-prod
    volumes:
      - db-data-prod:/var/lib/postgresql/data
    networks:
      - trfk

volumes:
  db-data-prod:

networks:
  trfk:
    driver: overlay
    external: true
