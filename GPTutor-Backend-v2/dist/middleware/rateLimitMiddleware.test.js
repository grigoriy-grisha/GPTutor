"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.testRateLimitMiddleware = testRateLimitMiddleware;
const rateLimitMiddleware_1 = require("./rateLimitMiddleware");
// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã rate limiting
async function testRateLimitMiddleware() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ rate limiting middleware...');
    const config = {
        max: 3,
        timeWindow: 1000, // 1 —Å–µ–∫—É–Ω–¥–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    };
    const middleware = (0, rateLimitMiddleware_1.createRateLimitMiddleware)(config);
    // –°–æ–∑–¥–∞–µ–º –º–æ–∫ –æ–±—ä–µ–∫—Ç—ã
    const mockRequest = {
        ip: '127.0.0.1',
        url: '/test',
        method: 'GET',
        headers: { 'user-agent': 'test-agent' }
    };
    const mockReply = {
        code: (status) => ({
            send: (data) => {
                console.log(`Response ${status}:`, data);
                return { status, data };
            }
        }),
        header: (name, value) => {
            console.log(`Header ${name}: ${value}`);
        }
    };
    console.log('\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...');
    // –¢–µ—Å—Ç 1-3: –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    for (let i = 1; i <= 3; i++) {
        console.log(`–ó–∞–ø—Ä–æ—Å ${i}:`);
        await middleware(mockRequest, mockReply);
    }
    console.log('\nüö´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞...');
    // –¢–µ—Å—Ç 4: –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞
    console.log('–ó–∞–ø—Ä–æ—Å 4 (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω):');
    await middleware(mockRequest, mockReply);
    console.log('\nüßπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ store...');
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä store –¥–æ –æ—á–∏—Å—Ç–∫–∏
    const store = (0, rateLimitMiddleware_1.getGlobalRateLimitStore)();
    console.log(`Store size before cleanup: ${store.size}`);
    // –ñ–¥–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–Ω–∞
    console.log('–û–∂–∏–¥–∞–Ω–∏–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è timeWindow...');
    await new Promise(resolve => setTimeout(resolve, 1100));
    // –û—á–∏—â–∞–µ–º store
    (0, rateLimitMiddleware_1.cleanupRateLimitStore)(store);
    console.log(`Store size after cleanup: ${store.size}`);
    console.log('\n‚úÖ –¢–µ—Å—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏...');
    // –¢–µ—Å—Ç –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ - –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å–Ω–æ–≤–∞
    console.log('–ó–∞–ø—Ä–æ—Å –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:');
    await middleware(mockRequest, mockReply);
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}
// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    testRateLimitMiddleware().catch(console.error);
}
